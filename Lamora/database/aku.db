import aiosqlite
from config import db_path

async def init_db():
    async with aiosqlite.connect(db_path) as db:
        await db.execute("CREATE TABLE IF NOT EXISTS blacklist_users (user_id INTEGER PRIMARY KEY)")
        await db.execute("CREATE TABLE IF NOT EXISTS blacklist_words (word TEXT PRIMARY KEY)")
        await db.commit()

async def add_user_blacklist(uid: int):
    await execute_query("INSERT OR IGNORE INTO blacklist_users VALUES (?)", (uid,))

async def add_word_blacklist(word: str):
    await execute_query("INSERT OR IGNORE INTO blacklist_words VALUES (?)", (word,))

async def list_blacklist_users():
    return await fetch_all("SELECT user_id FROM blacklist_users")

async def list_blacklist_words():
    return await fetch_all("SELECT word FROM blacklist_words")

async def clear_blacklist():
    await execute_query("DELETE FROM blacklist_users")
    await execute_query("DELETE FROM blacklist_words")

async def execute_query(query, params=()):
    async with aiosqlite.connect(db_path) as db:
        await db.execute(query, params)
        await db.commit()

async def fetch_all(query, params=()):
    async with aiosqlite.connect(db_path) as db:
        cursor = await db.execute(query, params)
        return await cursor.fetchall()