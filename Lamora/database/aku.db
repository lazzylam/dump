import aiosqlite

DB_NAME = "aku.db"

async def init_db():
    async with aiosqlite.connect(DB_NAME) as db:
        await db.execute("CREATE TABLE IF NOT EXISTS blacklist_users (user_id INTEGER PRIMARY KEY)")
        await db.execute("CREATE TABLE IF NOT EXISTS whitelist_users (user_id INTEGER PRIMARY KEY)")
        await db.execute("CREATE TABLE IF NOT EXISTS blacklist_words (word TEXT PRIMARY KEY)")
        await db.execute("CREATE TABLE IF NOT EXISTS whitelist_words (word TEXT PRIMARY KEY)")
        await db.commit()

async def add_entry(table, value):
    async with aiosqlite.connect(DB_NAME) as db:
        await db.execute(f"INSERT OR IGNORE INTO {table} VALUES (?)", (value,))
        await db.commit()

async def delete_entry(table, value):
    async with aiosqlite.connect(DB_NAME) as db:
        await db.execute(f"DELETE FROM {table} WHERE {table[:-1]} = ?", (value,))
        await db.commit()

async def list_entries(table):
    async with aiosqlite.connect(DB_NAME) as db:
        cursor = await db.execute(f"SELECT * FROM {table}")
        rows = await cursor.fetchall()
        return [row[0] for row in rows]

async def clear_table(table):
    async with aiosqlite.connect(DB_NAME) as db:
        await db.execute(f"DELETE FROM {table}")
        await db.commit()
